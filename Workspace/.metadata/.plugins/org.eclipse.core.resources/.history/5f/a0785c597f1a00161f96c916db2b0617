package hacker.rank;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class AlmostSorted {
	public static boolean checkArrayisSorted(int[] arr) {
		boolean flag = true;
		for (int i = 0; i < arr.length - 1; i++) {
			if (arr[i] > arr[i + 1]) {
				flag = false;
				break;
			}

		}
		return flag;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		int[] arr = new int[n];

		for (int i = 0; i < arr.length; i++) {
			arr[i] = sc.nextInt();
		}

		List<Integer> peaks = new ArrayList<Integer>();
		List<Integer> dips = new ArrayList<Integer>();
		for (int i = 1; i < arr.length - 1; i++) {
			if (arr[i] > arr[i + 1] && arr[i] > arr[i - 1])
				peaks.add(i + 1);
			else if (arr[i] < arr[i + 1] && arr[i] < arr[i - 1])
				dips.add(i + 1);
		}

		if (arr[0] > arr[1])
			peaks.add(1);
		if (arr[arr.length - 1] < arr[arr.length - 2])
			dips.add(arr.length);

		System.out.println(peaks);
		System.out.println(dips);

		if ((peaks.size() == dips.size())) {
			if (peaks.size() == 1) {
				/*System.out.println("yes\nswap "
						+ Math.min(dips.get(0), peaks.get(0)) + " "
						+ Math.max(dips.get(0), peaks.get(0)));*/
				int temp=arr[dips.get(0)];
				arr[dips.get(0)]=arr[peaks.get(0)];
				arr[peaks.get(0)]=temp;
			} else if (peaks.size() == 0) {
				System.out.println("yes");
			}
		} else if (peaks.size() == 1 && dips.size() == 0) {

		} else if (dips.size() == 1 && peaks.size() == 0) {

		} else
			System.out.println("no");

	}
}