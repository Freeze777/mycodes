package algo.stack;

import java.util.Scanner;
import java.util.Stack;

public class LargestRectangle {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] a = new int[n];
		int maxArea=Integer.MIN_VALUE;
		for (int i = 0; i < a.length; i++)
			a[i] = sc.nextInt();

		Stack<Integer> st = new Stack<Integer>();
		int i = 0;
		while (i < n) {
			if (st.isEmpty() || a[st.peek()] <= a[i])
				st.push(i++);
			else {
				while (!st.isEmpty() && a[st.peek()] <= a[i]) {
					int curr = st.pop();
					int leftLimit = st.isEmpty()?-1:st.peek();
					
					currArea=(rightLimit-leftLimit)*a[curr]
				}
			}

		}
	}

}
