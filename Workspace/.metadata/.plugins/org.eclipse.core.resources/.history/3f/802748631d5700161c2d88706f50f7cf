package algo.string;

import java.util.HashMap;
import java.util.Map;

public class WordPatternII {
	public static void main(String[] args) {
		String pattern = "abacb";
		String s = "redblueredgreenblue";
		Map<String, Character> map = new HashMap<String, Character>();
		boolean ans = true;
		int offset = 0;
		for (int i = 0; i < pattern.length() && ans; i++) {
			char c = s.charAt(offset);
			switch (c) {
			case 'r':
				if (!map.containsKey("red"))
					map.put("red", pattern.charAt(i));
				else {
					ans = ans && (map.get("red") == pattern.charAt(i));
				}
				offset += 3;
				break;
			case 'g':
				if (!map.containsKey("green"))
					map.put("green", pattern.charAt(i));
				else {
					ans = ans && (map.get("green") == pattern.charAt(i));
				}
				offset += 5;
				break;
			case 'b':
				if (!map.containsKey("blue"))
					map.put("blue", pattern.charAt(i));
				else {
					ans = ans && (map.get("blue") == pattern.charAt(i));
				}
				offset += 4;
				break;

			default:
				break;
			}

		}

	}

}
