import java.util.Scanner;



public class FIB2 {

private static int a,b;

	private static String quotientString="";
	private static int getNthFibNum(String binaryNumber,int m) {
		int [][] result={{1,0},{0,1}};
		int [][] tempFibMatrix={{1,1},{1,0}};
		for (int i = 0; i < binaryNumber.length(); i++) 
		{	
			if(binaryNumber.charAt(i)=='1')
				moduloMatrixMul2x2(result, tempFibMatrix, m);

			int [][] temp={{tempFibMatrix[0][0],tempFibMatrix[0][1]},{tempFibMatrix[1][0],tempFibMatrix[1][1]}};
			moduloMatrixMul2x2(tempFibMatrix,temp, m);

		}

		return ((b*result[1][0])+(a*result[1][1]))%m;
	}

	private static int getFibPeriod(int m) {
		int k=1;
		int [][] temp={{1,0},{0,1}};
		int [][] fibMatrix={{1,1},{1,0}};
		while(true)
		{	
			moduloMatrixMul2x2(temp,fibMatrix,m);
			if(temp[0][0]==1&&temp[0][1]==0&&temp[1][0]==0&&temp[1][1]==1)
				break;
			k++;
		}
		return k;
	}

	private static void moduloMatrixMul2x2(int[][] temp, int[][] fibMatrix2,int m) {
		int a00=temp[0][0],a01=temp[0][1],a10=temp[1][0],a11=temp[1][1];
		temp[0][0]=(a00*fibMatrix2[0][0]+a01*fibMatrix2[1][0])%m;
		temp[0][1]=(a00*fibMatrix2[0][1]+a01*fibMatrix2[1][1])%m;
		temp[1][0]=(a10*fibMatrix2[0][0]+a11*fibMatrix2[1][0])%m;
		temp[1][1]=(a10*fibMatrix2[0][1]+a11*fibMatrix2[1][1])%m;
	}

	private static String getBinaryString() {
		
		String bString="";
		while(!quotientString.matches("^[0]+$"))
			bString+=getQandR(quotientString,2);
			

		return (bString.length()==0)?"0":bString;


	}

	private static int getQandR(String dividend, int divisor) {
		int p=0,i=0,remainder=0;
	String quotient="";

		while( i < dividend.length()) {
			if(remainder==0 && dividend.charAt(i)=='0')
			{	
				while(i<dividend.length() && dividend.charAt(i)=='0')
				{
					quotient+="0";
					i++;
					
				}
		
			}
			if(i == dividend.length())
				break;
			p=remainder*10+(dividend.charAt(i)-'0');
			while(p<divisor &&i < dividend.length()-1)
				{
				p=p*10+dividend.charAt(++i)-'0';
				
				quotient+="0";
				}
		
			quotient+=(p/divisor);
		
			remainder=p%divisor;
			remainder=(remainder<0)?(remainder+divisor):remainder;
			
			i++;
		}
		quotientString=quotient;		
	
		return remainder;
	}



	public static void main(String[] args) {

		//file input format : a b m n
		//file input from unix command line :java FIB2 <input.txt
		String[] inputs={"","","",""};

		
	
		int i=0;
		Scanner scanner=new Scanner(System.in);
		while(i!=4)
		inputs[i++]=scanner.next();
		
		a=Integer.parseInt(inputs[0]);
		b=Integer.parseInt(inputs[1]);
		int m=Integer.parseInt(inputs[2]);
		String number=inputs[3]; 
		String binaryNumber="";
		int period=getFibPeriod(m);
		

		
		System.out.println("\nMethod 1:MATRIX EXPONENTIATION");
		quotientString=number;
		binaryNumber=getBinaryString();
		System.out.println("Ans="+getNthFibNum(binaryNumber,m));
	
		System.out.println();
		
		System.out.println("Method 2:PERIODICITY");
		quotientString=getQandR(number,period)+"";
		System.out.println("Period="+period);
		System.out.println("N mod period="+quotientString);
		binaryNumber=getBinaryString();
		System.out.println("Ans="+getNthFibNum(binaryNumber,m));

	}

}
