import java.util.Scanner;

public class NumberOfWays {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] pref = new int[n];
		pref[0] = sc.nextInt();
		for (int i = 1; i < pref.length; i++) {
			pref[i] = sc.nextInt();
			pref[i] += pref[i - 1];
		}
		if(pref[n-1]%3==0){
			
		}
		
	}
	
	private static int lastOccurence(int[] A, int key, int low, int high) {
		if (low > high)
			return -1;
		int mid = (low + high) / 2;
		if ((mid == A.length - 1 || A[mid + 1] > key) && A[mid] == key)
			return mid;
		else if (A[mid] > key)
			return lastOccurence(A, key, low, mid - 1);
		else
			return lastOccurence(A, key, mid + 1, high);

	}

	private static int firstOccurence(int[] A, int key, int low, int high) {
		if (low > high)
			return -1;
		int mid = (low + high) / 2;
		if ((mid == 0 || A[mid - 1] < key) && A[mid] == key)
			return mid;
		else if (A[mid] < key)
			return firstOccurence(A, key, mid + 1, high);
		else
			return firstOccurence(A, key, low, mid - 1);

	}

}
