package com.ctl.cpms.util;

import com.ctl.cpms.domain.PoolRequest;
import com.ctl.cpms.domain.Route;
import com.ctl.cpms.domain.TransitPoint;
import com.ctl.cpms.domain.User;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.AnnotationConfiguration;

import java.io.File;
import java.util.logging.Logger;

public class HibernateConnection {

    private static SessionFactory sessionFactory;
    private final static Logger LOGGER = Logger.getLogger(HibernateConnection.class.getName());

    private static void initConnection() {
        LOGGER.info("HibernateConnection.initConnection");
        try {
//            File hibernateConfigFile=new File("C:\\aa62857\\Practice\\workspace\\CPMS\\src\\hibernate.cfg.xml");
            sessionFactory = ((AnnotationConfiguration) new AnnotationConfiguration()
                    .configure()).addPackage("com.ctl.cpms.domain")
                    .addAnnotatedClass(User.class)
                    .addAnnotatedClass(Route.class)
                    .addAnnotatedClass(PoolRequest.class)
                    .addAnnotatedClass(TransitPoint.class)
                    .buildSessionFactory();
        } catch (Throwable ex) {
            System.err.println("Failed to create sessionFactory object." + ex);
            throw new ExceptionInInitializerError(ex);
        }
        LOGGER.info("SessionFactory initialized successfully");

    }

    public static SessionFactory getSessionFactory() {
        if (sessionFactory == null) {
            initConnection();
        }
        return sessionFactory;
    }


}
