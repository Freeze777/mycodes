package centurylink.cpms;

import java.sql.SQLException;
import java.util.ArrayList;

import centurylink.cpms.User;

public class DAOLayer implements DAOInterface {


	public void storeUserDetailsInDB(User user) throws SQLException,IllegalArgumentException {
		// TODO Auto-generated method stub
		System.out.println("storeUserDetails-in DAO");
		//DBOps db=new DBOps(MakeCon.r);
		HibernateOps hb=new HibernateOps();
		hb.addCpmsUser(user,HibernateConnection.getFactory());

		//db.insert(user);

	}


	public DAOLayer() {
		try {
			makeDBconnection();
		} catch (IllegalArgumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}


	public String retrieveDetailsInDB(User user) throws SQLException,
	IllegalArgumentException {
		// TODO Auto-generated method stub
		//DBOps db=new DBOps(MakeCon.r);
		System.out.println("retrieveUserDetails-in DAO");
		HibernateOps hb=new HibernateOps();
		return hb.selectCpmsUser(user, HibernateConnection.getFactory());
		//return(db.select(user));

	}


	@Override
	public void makeDBconnection() throws SQLException,
	IllegalArgumentException {
		// TODO Auto-generated method stub
		HibernateConnection.createConnection();


	}


	@Override
	public void killDBconnection() throws SQLException,
	IllegalArgumentException {
		// TODO Auto-generated method stub


		/*//for jdbc connections
		if (MakeCon.r != null)
			try {
				MakeCon.r.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}*/

	}


	@Override
	public void storeRoutesDetailsInDB(Routes routes,long cid) throws SQLException,
	IllegalArgumentException {

		// TODO Auto-generated method stub
		System.out.println("storeRouteDetails-in DAO");
		//DBOps db=new DBOps(MakeCon.r);
		HibernateOps hb=new HibernateOps();
		hb.addCpmsRoutes(routes,HibernateConnection.getFactory(),cid);



		// TODO Auto-generated method stub

	}




	@Override
	public void storeTransitsDetailsInDB(long toRouteId, long fromRouteId, Long cid,
			String[] toTrasitsArray, int toLength, String[] fromTrasitsArray,
			int fromLength) throws SQLException, IllegalArgumentException {
		// TODO Auto-generated method stub
		System.out.println("storeTransitDetails-in DAO");
		HibernateOps hb=new HibernateOps();
		hb.addCpmsTransits(toRouteId,fromRouteId,cid,toTrasitsArray,toLength,fromTrasitsArray,fromLength,
				HibernateConnection.getFactory());
		
	}


	@Override
	public ArrayList<String> getTransitListFromDB(int i) throws SQLException {
		// TODO Auto-generated method stub
		System.out.println("getTransitListFromDB-in DAO");
		HibernateOps hb=new HibernateOps();
		ArrayList<String> list =null;
		if(i == 0)
		{
			list = hb.fillCpmsTransitList(0,HibernateConnection.getFactory());
		}
		else if(i==1)
		{
			list = hb.fillCpmsTransitList(1,HibernateConnection.getFactory());
		}
		return list;
	}


	/*
	public String updateUserDetailsInDB(User user) throws SQLException,
			IllegalArgumentException {
		// TODO Auto-generated method stub
		DBOps db=new DBOps(MakeCon.r);
		return(db.update(user));

	}
	 */

	/*@Override
	public void userblockInDB(User user) throws SQLException,
			IllegalArgumentException {
		// TODO Auto-generated method stub
		DBOps db=new DBOps(MakeCon.r);
		db.block(user);


	}
	 */







}
